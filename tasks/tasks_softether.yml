---
# tasks file for sa-vpn-softether

- name: SoftEther | Check vpnserver presence
  command: test -x {{ softether_home }}/vpnserver
  ignore_errors: yes
  register: vpnserver_present
  changed_when: false
  tags:
      - softether

- block:
  - name: SoftEther | Define package dependencies (Debian Family)
    set_fact:
      packages:
        - make
        - gcc
        - libssl-dev
        - curl
        - procps
    when: vpnserver_present is failed
    tags:
        - softether
  when: ansible_os_family == "Debian"

- block:
  - name: SoftEther | Define package dependencies (RedHat Family)
    set_fact:
      packages:
        - make
        - gcc
        - binutils
        - which
    when: vpnserver_present is failed
    tags:
        - softether
  when: ansible_os_family == "RedHat"

- name: SoftEther | yum fix for [Errno 256] No more mirrors to try
  shell: |
    yum clean headers && yum clean metadata && yum makecache
    yum update -y
  when: ansible_os_family == "RedHat"

- name: SoftEther | Install package dependencies
  package: pkg="{{ item }}"
  with_items: "{{ packages }}"
  become: yes
  when: vpnserver_present is failed
  tags:
    - softether

- name: SoftEther | allow to reenter make process - reset folder
  file: path="{{ softether_home }}" state="absent"
  become: yes
  when: vpnserver_present is failed
  tags:
    - softether

- name: SoftEther | Ensure target directory exists
  file: path="{{ softether_home }}" state="directory"
  become: yes
  when: vpnserver_present is failed
  tags:
    - softether

- name: SoftEther | Ensure scenarios directory exists
  file: path="{{ softether_home }}/scenarios" state="directory"
  become: yes
  when: vpnserver_present is failed
  tags:
    - softether

- name: SoftEther | Ensure scenarios directory exists
  file: path="{{ softether_home }}/generated" state="directory"
  become: yes
  when: vpnserver_present is failed
  tags:
    - softether

- name: SoftEther | Get Distribution Url
  shell: curl --silent "https://api.github.com/repos/SoftEtherVPN/SoftEtherVPN_Stable/releases" | grep "browser_download_url.*vpnserver.*{{ softether_version }}.*linux-x64-64bit.tar.gz" | sed -E 's/.*"([^"]+)".*/\1/'
  register: vpnserver_url
  changed_when: False

- name: SoftEther | Download distribution
  get_url:
    url: "{{ vpnserver_url.stdout }}"
    dest: "/tmp/softether.tar.gz"
  become: yes
  tags:
    - softether
    - skip_ansible_lint

- name: SoftEther | unarchive
#  shell: "tar -xzf /tmp/softether.tar.gz -C {{softether_home}}"
  unarchive: src="/tmp/softether.tar.gz" dest="{{ softether_location }}" remote_src=yes
  when: vpnserver_present is failed
  become: yes
  tags:
    - softether

- name: SoftEther | make
  shell: yes 1 | make
  when: vpnserver_present is failed
  args:
    chdir: "{{ softether_home }}"
  tags:
    - softether
    - skip_ansible_lint

- name: SoftEther | configure lang.config
  lineinfile:
    dest: "{{ softether_home }}/lang.config"
    regexp: "^(en|ja|cn)$"
    line: "{{ softether_lang }}"
    create: yes
  become: yes
  changed_when: False
  tags:
    - softether

- name: SoftEther | install init script
  template:
    src: "{{ role_dir }}/templates/startup/vpnserver.init.j2"
    dest: /etc/init.d/vpnserver
    mode: 0755
  when: upstart_system == "upstart"
  become: yes
  tags:
    - softether

- name: SoftEther | install init script
  template:
    src: "{{ role_dir }}/templates/startup/vpnserver.service.j2"
    dest: /etc/systemd/system/vpnserver.service
    mode: 0755
  when: upstart_system == "systemd"
  become: yes
  tags:
    - softether
    
- name: SoftEther | Relaod Systemd Service Daemon
  shell: systemctl daemon-reload
  changed_when: False
  tags:
    - softether

- name: SoftEther | Reset configuration (1/4)
  service: name="vpnserver" enabled=yes  state=stopped
  changed_when: False
  become: yes
  tags:
    - softether

- name: SoftEther | Reset configuration (2/4)
  file: path="{{ softether_home }}/vpn_server.config" state="absent"
  become: yes
  changed_when: False
  tags:
    - softether

#- name: SoftEther | Keys in sysctl.conf (3/4)
#  sysctl:
#    name: "{{ item.name }}"
#    value: "{{ item.value }}"
#    ignoreerrors: yes
#    state: "{{ item.state | default('present') }}"
#    reload: "yes"
#  with_items: "{{ softether_sysctl_conf_lines | default() }}"
#  when: docker_test is not defined #TODO: check
#  become: yes
#  tags:
#    - softether

- name: SoftEther | Keys in sysctl.conf (3/4)
  template:
    src: sysctl-conf.j2
    dest: "/etc/sysctl.d/60-softether.conf"
    owner: root
    group: root
    mode: 0644
  notify: sysctl reload
  become: yes
  tags:
    - softether

- name: SoftEther | Reset configuration (4/4)
  service: name="vpnserver" enabled=yes  state=started
  become: yes
  changed_when: False
  when: docker_test is not defined
  tags:
    - softether

- name: SoftEther | Template unattended setup (builtin)
  template:
    src: "{{ role_dir }}/templates/scenarios/{{ item }}"
    dest: "{{ softether_home }}/scenarios/{{ item }}"
  with_items:
    - create_hub
    - check
  become: yes
  tags:
    - softether

- name: SoftEther | Check configuration
  command: ./vpncmd localhost /tools /IN:scenarios/check
  args:
    chdir: "{{ softether_home }}"
  become: yes
  changed_when: False
  tags:
    - softether
    - skip_ansible_lint

- name: SoftEther | Proceed with setup
  command: ./vpncmd localhost /server /IN:{{ softether_init_script }}
  args:
    chdir: "{{ softether_home }}"
#    creates: "{{ softether_home }}/generated/openvpn_config.zip"
  changed_when: False
  when: docker_test is not defined
  become: yes
  tags:
    - softether

- name: SoftEther | Restart service
  service: name="vpnserver" enabled=yes  state=started
  become: yes
  when: docker_test is not defined
  tags:
    - softether

- debug: msg="Copy artifacts as scp {{ ansible_ssh_user | default('youruser') }}@{{ ansible_ssh_host | default('yourhost') }}:{{ softether_home }}/generated/* ."
  tags:
    - skip_ansible_lint

- name: Download SoftEther Artifacts
  synchronize: mode=pull src="{{ softether_home }}/generated" dest="{{ playbook_dir }}/generated"
  ignore_errors: yes
  become: yes
  when: docker_test is not defined
  tags:
    - openvpn

- name: SoftEther | Add {{ softether_home }} to path
  lineinfile:
    dest: /etc/profile.d/softether.sh
    state: present
    create: yes
    regexp: '^export PATH'
    line: 'export PATH=$PATH:{{ softether_home }}'
  become: yes
  when: option_add_to_path
  tags:
    - softether
